r "r" "rename_word" ;

rename_word "d" "def" ;

rename_word "l" "late_bind_and_call_word" ;
rename_word "i" "call" ;
rename_word "ni" "native_call" ;
rename_word "nt" "native_call_test" ;
rename_word "j" "jmp" ;
rename_word "w" "while" ;
rename_word "cs" "cond_start" ;
rename_word "ce" "cond_end" ;
rename_word "cw" "cond_when" ;
rename_word "cd" "cond_default" ;
rename_word "t" "true" ;
rename_word "f" "false" ;

rename_word "b&" "and" ;
rename_word "b|" "or" ;
rename_word "b!" "not" ;

rename_word ">>" "bit_rshift";
rename_word "<<" "bit_lshift";
rename_word "^" "bit_xor";
rename_word "|" "bit_or";
rename_word "&" "bit_and";

rename_word "c+" "checked_add";
rename_word "c*" "checked_mul";

rename_word "nl" "print_newline" ;
rename_word "p" "print_string" ;
rename_word ".b" "print_bool" ;
rename_word ".c" "write_byte_to_stdout" ;


rename_word "du" "dup" ;
#rename_word "dn" "pick" ;
rename_word "2d" "2dup" ;
rename_word "s" "swap" ;
rename_word "ro" "rot" ;
rename_word "rr" "-rot" ;
rename_word "dr" "drop" ;
rename_word "o" "over" ;



rename_word "rd" "return_stack_depth" ;
rename_word "rt" "return_stack_top" ;
rename_word "rs" "return_stack_bottom" ;

rename_word "rp" "r_pick" ;

rename_word "wb" "write_mem_byte" ;
rename_word "rb" "read_mem_byte" ;
rename_word "wi" "write_mem_i64" ;
rename_word "ri" "read_mem_i64" ;

rename_word "sc" "syscall" ;

rename_word "di" "the_dictionary" ;

rename_word "fc" "func_compose" ; # <func1> <func2> -> <func that calls func2 first, then call func1>
rename_word "ca" "func_capture" ; # <value> -> <func that puts value on the stack>

rename_word "hp" "sigsegv_handler_pointer"
rename_word "ij" "jmp_instruction_code"

